---
name: integration-test
on: workflow_call
jobs:
  integration-test:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    permissions: {}
    env:
      GITHUB_TOKEN: ${{github.token}}
      AQUA_LOG_COLOR: always
      AQUA_GLOBAL_CONFIG: ${{ github.workspace }}/tests/main/aqua-global.yaml:${{ github.workspace }}/tests/main/aqua-global-2.yaml
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version-file: go.mod
          cache: true

      - run: |
          go install \
            -ldflags "-X main.version=v2.48.2-local -X main.commit=$sha -X main.date=$(date +"%Y-%m-%dT%H:%M:%SZ%:z" | tr -d '+')" \
            ./cmd/aqua
      - run: echo "${XDG_DATA_HOME:-$HOME/.local/share}/aquaproj-aqua/bin" >> "$GITHUB_PATH"
      - run: aqua policy allow

      - run: |
          aqua version
          version=$(aqua version)
          if [ "$version" = unknown ]; then
            echo "::error:: aqua version is unknown"
            exit 1
          fi
      - run: aqua version -j
      - run: aqua -v
      - run: aqua --help
      - run: aqua help
      - run: aqua help-all

      - run: echo "standard,kubernetes-sigs/kind" | aqua g -f -
      - run: echo "x-motemen/ghq" | aqua g -f -
      - run: echo "local,aquaproj/aqua-installer" | aqua -c tests/main/aqua-global.yaml g -f -
      - run: aqua g x-motemen/ghq aquaproj/aqua-installer
      - run: echo cli/cli | aqua g -f - x-motemen/ghq aquaproj/aqua-installer suzuki-shunsuke/tfcmt@v3.0.0
      - name: Test -pin
        run: aqua g --pin cli/cli suzuki-shunsuke/tfcmt@v2.0.0
      - name: Test g -g
        run: aqua g -g cli/cli

      - name: Test unarchive
        run: aqua i
        working-directory: tests/unarchive

      - name: Test checksum
        run: aqua -c aqua.yaml i
        working-directory: tests/3064

      - name: Test version_prefix
        run: aqua -c aqua.yaml g -i kubernetes-sigs/kustomize
        working-directory: tests/main

      - name: Test command aliases
        run: aqua i -l
        working-directory: tests/aliases
      - name: Test command aliases
        run: terraform-013 version
        working-directory: tests/aliases

      - run: aqua list
      - run: aqua list -installed
      - run: aqua list -installed -a

      - run: aqua update-checksum
        working-directory: tests/main
      - run: aqua update-checksum -prune
        working-directory: tests/main
      - run: aqua i -l -a
        working-directory: tests/main
      - run: aqua i
        working-directory: tests/main
      - run: aqua which go
      - name: Test which's -v option
        run: aqua which -v cosign
      - run: kind version
        working-directory: tests/main
      - run: kind version
      - run: restic version
        env:
          AQUA_PROGRESS_BAR: "true"
      - run: migrate -version
      - run: ghq -version
      - run: gh version
      - run: tfenv --version
      - run: aqua -c tests/main/aqua-global.yaml g local,kubernetes-sigs/kustomize
      - run: bats -v
      - run: helm version
      - run: github-compare -v
      - run: terrafmt version

      - name: Test --generate-shell-completion
        run: aqua --generate-shell-completion
      - name: output bash completion
        run: aqua completion bash
      - name: output zsh completion
        run: aqua completion zsh
      - name: output fish completion
        run: aqua completion fish

      - name: Test aqua g -i
        run: aqua g -i suzuki-shunsuke/ghalint@v1.0.0 suzuki-shunsuke/ci-info@v2.3.1 suzuki-shunsuke/ghd2i@v0.1.2
        working-directory: tests/insert
      - name: compare aqua.yaml and expect.yaml
        run: diff aqua.yaml expect.yaml
        working-directory: tests/insert

      - name: Test version_expr readFile
        run: aqua which -v terraform
        working-directory: tests/version_expr_file
      - name: Test version_expr readJSON
        run: aqua which -v terraform
        working-directory: tests/version_expr_json
      - name: Test version_expr readYAML
        run: aqua which -v terraform
        working-directory: tests/version_expr_yaml

      - run: aqua g -i suzuki-shunsuke/tfcmt
        working-directory: tests/main
      - name: add duplicated package
        run: aqua g -i suzuki-shunsuke/tfcmt
        working-directory: tests/main
      - run: git diff aqua.yaml
        working-directory: tests/main

      - name: "Test generate-registry"
        run: aqua gr suzuki-shunsuke/mkghtag
      - name: Test generate-registry (specify version)
        run: aqua gr suzuki-shunsuke/tfcmt@v3.2.4

      - name: test aqua cp
        run: aqua cp actionlint
      - name: test aqua cp
        run: dist/actionlint -version
      - name: test aqua cp
        run: aqua cp
      - name: test aqua cp -a
        run: aqua cp -a

      - name: test tags
        run: aqua i
        working-directory: tests/tag
      - name: test tags
        run: aqua i -t test
        working-directory: tests/tag
      - name: test tags
        run: aqua i -t foo,bar
        working-directory: tests/tag
      - name: test tags
        run: aqua i --exclude-tags test
        working-directory: tests/tag
      - name: test tags
        run: aqua i --exclude-tags test -t foo
        working-directory: tests/tag

      - name: test tags
        run: aqua cp
        working-directory: tests/tag
      - name: test tags
        run: aqua cp -t test
        working-directory: tests/tag
      - name: test tags
        run: aqua cp -t foo,bar
        working-directory: tests/tag
      - name: test tags
        run: aqua cp --exclude-tags test
        working-directory: tests/tag
      - name: test tags
        run: aqua cp --exclude-tags test -t foo
        working-directory: tests/tag

      - name: Test import_dir (aqua init -u)
        run: aqua init -u
        working-directory: tests/import_dir
      - name: Test import_dir
        run: aqua g cli/cli
        working-directory: tests/import_dir
      - name: Test import_dir
        run: aqua g -i cli/cli
        working-directory: tests/import_dir
      - name: Check imports/gh.yaml
        run: cat imports/gh.yaml
        working-directory: tests/import_dir
      - name: Test import_dir (aqua up <pkg>)
        run: aqua up gh@v2.65.0
        working-directory: tests/import_dir
      - name: Test import_dir version
        run: cat imports/gh.yaml
        working-directory: tests/import_dir
      - name: Test import_dir (aqua up)
        run: aqua up
        working-directory: tests/import_dir

      - name: update only registrires
        run: |
          aqua update -r
          git diff .
          git checkout -- .
        working-directory: tests/update

      - name: update only packages
        run: |
          aqua up -p
          git diff .
          git checkout -- .
        working-directory: tests/update

      - name: update all registries and packages
        run: |
          aqua update
          git diff .
          git checkout -- .
        working-directory: tests/update

      - name: update only specific command
        run: |
          aqua update tfcmt ci-info
          git diff .
          git checkout -- .
        working-directory: tests/update

      - name: update (go_version_file)
        run: |
          aqua up
          git diff .
          git checkout -- .
        working-directory: tests/update2

      - name: update (version_expr)
        run: |
          aqua up
          git diff .
          git checkout -- .
        working-directory: tests/update3

      - name: Test vacuum
        env:
          AQUA_VACUUM_DAYS: 1
        run: aqua vacuum
      - name: Test vacuum --init
        run: aqua vacuum --init

      - run: aqua update-checksum -a

      - run: terraform --help
      - run: terrafmt --help
      - name: Test rm
        # http - terraform
        # go_install - terrafmt
        run: aqua rm x-motemen/ghq bats-core/bats-core terraform terrafmt
      - name: Remove not found package
        run: aqua rm Builditluc/wiki-tui
      - name: Remove not found command
        run: aqua rm wiki-tui

      - name: Test rm -m l
        run: aqua rm -m l ghcp
      - name: Test rm -m lp
        run: aqua rm -m lp ghcp reviewdog

      - name: Test rm --all
        run: aqua rm -a

      # Test if global configuration files are read in `aqua list` and `aqua g`
      - run: aqua list
        working-directory: /tmp

      - name: Test update-aqua
        run: aqua update-aqua

  integration-test-cargo:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    permissions: {}
    env:
      AQUA_LOG_COLOR: always
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version-file: go.mod
          cache: true

      - run: |
          go install \
            -ldflags "-X main.version=v2.48.2-local -X main.commit=$sha -X main.date=$(date +"%Y-%m-%dT%H:%M:%SZ%:z" | tr -d '+')" \
            ./cmd/aqua
      - run: echo "${XDG_DATA_HOME:-$HOME/.local/share}/aquaproj-aqua/bin" >> "$GITHUB_PATH"
      - run: aqua policy allow

      - name: Test the package type "cargo"
        run: aqua i
        working-directory: tests/cargo
        env:
          GITHUB_TOKEN: ${{github.token}}
      - name: Test search versions of the package type "cargo"
        run: aqua g crates.io/eza
        working-directory: tests/cargo
        env:
          GITHUB_TOKEN: ${{github.token}}
      - name: Test aqua gr cargo
        run: aqua gr crates.io/skim
        env:
          GITHUB_TOKEN: ${{github.token}}
      - name: Test aqua gr -init
        run: aqua gr -init suzuki-shunsuke/mkghtag
        env:
          GITHUB_TOKEN: ${{github.token}}
      - name: Test aqua gr -c
        run: aqua gr -l 10 -c aqua-generate-registry.yaml
        working-directory: tests/gr-config
        env:
          GITHUB_TOKEN: ${{github.token}}

  integration-test-all-envs:
    timeout-minutes: 30
    runs-on: ${{ matrix.env.runs-on }}
    permissions: {}
    strategy:
      matrix:
        env:
          - runs-on: windows-latest
          - runs-on: ubuntu-24.04
          - runs-on: ubuntu-24.04-arm
          - runs-on: macos-13
          - runs-on: macos-14
    env:
      AQUA_LOG_COLOR: always
      AQUA_GLOBAL_CONFIG: ${{ github.workspace }}/tests/main/aqua-global.yaml:${{ github.workspace }}/tests/main/aqua-global-2.yaml
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version-file: go.mod
          cache: true
      - run: |
          go install -ldflags "-X main.version=v2.48.2-local -X main.commit=$sha -X main.date=$(date +"%Y-%m-%dT%H:%M:%SZ%:z" | tr -d '+')" ./cmd/aqua

      - run: printf "%s\\\\bin\n" "$(aqua root-dir)" >> "$GITHUB_PATH"
        if: runner.os == 'Windows'
      - run: echo "$(aqua root-dir)/bin" >> "$GITHUB_PATH"
        if: runner.os != 'Windows'
      - run: |
          ("$(aqua root-dir)\bin") | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        shell: pwsh
        if: runner.os == 'Windows'

      - run: aqua policy allow

      - name: Test pnpm (hardlink)
        run: aqua -c aqua.yaml i
        working-directory: tests/pnpm
      - name: Test pnpm (hardlink)
        run: pnpm install
        working-directory: tests/pnpm
      - name: Test pnpm (hardlink)
        run: pnpm install
        working-directory: tests/pnpm
        shell: bash
        if: runner.os == 'Windows'

      - name: Test minisign
        run: aqua -c aqua.yaml i
        working-directory: tests/minisign
      - name: test Cosign, SLSA, and GitHub Artifact Attestations
        run: aqua i
        working-directory: tests/cosign
        env:
          GH_DEBUG: "1"
          GITHUB_TOKEN: ${{github.token}} # gh attestation verify requires a GitHub access token
