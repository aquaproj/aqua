---
name: integration-test
on: workflow_call
env:
  AQUA_DISABLE_COSIGN: "true"
  AQUA_DISABLE_SLSA: "true"
jobs:
  integration-test:
    runs-on: ubuntu-latest
    permissions: {}
    env:
      GITHUB_TOKEN: ${{github.token}}
      AQUA_LOG_LEVEL: debug
      AQUA_LOG_COLOR: always
      AQUA_GLOBAL_CONFIG: ${{ github.workspace }}/tests/main/aqua-global.yaml:${{ github.workspace }}/tests/main/aqua-global-2.yaml
    steps:
      - uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4
      - uses: actions/setup-go@cdcb36043654635271a94b9a6d1392de5bb323a7 # v5.0.1
        with:
          go-version: 1.22.2
          cache: true

      - uses: suzuki-shunsuke/github-token-action@350d7506222e3a0016491abe85b5c4dd475b67d1 # v0.2.1
        id: token
        with:
          github_app_id: ${{secrets.APP_ID}}
          github_app_private_key: ${{secrets.APP_PRIVATE_KEY}}
          default_github_token: ${{github.token}}

      - run: go install ./cmd/aqua
      - run: echo "${XDG_DATA_HOME:-$HOME/.local/share}/aquaproj-aqua/bin" >> "$GITHUB_PATH"
      - run: aqua policy allow
      - run: echo "standard,kubernetes-sigs/kind" | aqua g -f -
        env:
          GITHUB_TOKEN: ${{steps.token.outputs.token}}
      - run: echo "x-motemen/ghq" | aqua g -f -
        env:
          GITHUB_TOKEN: ${{steps.token.outputs.token}}
      - run: echo "local,aquaproj/aqua-installer" | aqua -c tests/main/aqua-global.yaml g -f -
        env:
          GITHUB_TOKEN: ${{steps.token.outputs.token}}
      - run: aqua g x-motemen/ghq aquaproj/aqua-installer
        env:
          GITHUB_TOKEN: ${{steps.token.outputs.token}}
      - run: echo cli/cli | aqua g -f - x-motemen/ghq aquaproj/aqua-installer suzuki-shunsuke/tfcmt@v3.0.0
        env:
          GITHUB_TOKEN: ${{steps.token.outputs.token}}
      - name: Test -pin
        run: aqua g --pin cli/cli suzuki-shunsuke/tfcmt@v2.0.0
        env:
          GITHUB_TOKEN: ${{steps.token.outputs.token}}
      - name: Test g -g
        run: aqua g -g cli/cli
        env:
          GITHUB_TOKEN: ${{steps.token.outputs.token}}

      - name: Test version_prefix
        run: aqua -c aqua.yaml g -i kubernetes-sigs/kustomize
        working-directory: tests/main
        env:
          GITHUB_TOKEN: ${{steps.token.outputs.token}}

      - run: aqua list
      - run: aqua list -installed
      - run: aqua list -installed -a

      - run: aqua update-checksum
        working-directory: tests/main
        env:
          GITHUB_TOKEN: ${{steps.token.outputs.token}}
      - run: aqua update-checksum -prune
        working-directory: tests/main
        env:
          GITHUB_TOKEN: ${{steps.token.outputs.token}}
      - run: aqua i -l -a
        working-directory: tests/main
      - run: aqua i
        working-directory: tests/main
        env:
          GITHUB_TOKEN: ${{steps.token.outputs.token}}
      - run: aqua which go
      - name: Test which's -v option
        run: aqua which -v cosign
      - run: kind version
        working-directory: tests/main
        env:
          GITHUB_TOKEN: ${{steps.token.outputs.token}}
      - run: kind version
        env:
          GITHUB_TOKEN: ${{steps.token.outputs.token}}
      - run: restic version
        env:
          AQUA_PROGRESS_BAR: "true"
          GITHUB_TOKEN: ${{steps.token.outputs.token}}
      - run: migrate -version
        env:
          GITHUB_TOKEN: ${{steps.token.outputs.token}}
      - run: ghq -version
        env:
          GITHUB_TOKEN: ${{steps.token.outputs.token}}
      - run: gh version
        env:
          GITHUB_TOKEN: ${{steps.token.outputs.token}}
      - run: tfenv --version
        env:
          GITHUB_TOKEN: ${{steps.token.outputs.token}}
      - run: aqua -c tests/main/aqua-global.yaml g local,kubernetes-sigs/kustomize
        env:
          GITHUB_TOKEN: ${{steps.token.outputs.token}}
      - run: bats -v
        env:
          GITHUB_TOKEN: ${{steps.token.outputs.token}}
      - run: helm version
        env:
          GITHUB_TOKEN: ${{steps.token.outputs.token}}
      - run: github-compare -v
        env:
          GITHUB_TOKEN: ${{steps.token.outputs.token}}
      - run: terrafmt version
        env:
          GITHUB_TOKEN: ${{steps.token.outputs.token}}

      - name: Test the package type "cargo"
        run: sk --version
        env:
          GITHUB_TOKEN: ${{steps.token.outputs.token}}
      - name: Test search versions of the package type "cargo"
        run: aqua -c tests/main/aqua-global.yaml g local,crates.io/skim
        env:
          GITHUB_TOKEN: ${{steps.token.outputs.token}}
      - name: Test aqua gr cargo
        run: aqua gr crates.io/skim
        env:
          GITHUB_TOKEN: ${{steps.token.outputs.token}}

      - name: test cosign
        run: aqua i
        working-directory: tests/cosign
        env:
          GITHUB_TOKEN: ${{steps.token.outputs.token}}

      - name: test SLSA
        run: aqua i
        working-directory: tests/slsa
        env:
          GITHUB_TOKEN: ${{steps.token.outputs.token}}

      - name: output bash completion
        run: aqua completion bash
      - name: output zsh completion
        run: aqua completion zsh

      - run: aqua g -i suzuki-shunsuke/tfcmt
        working-directory: tests/main
        env:
          GITHUB_TOKEN: ${{steps.token.outputs.token}}
      - name: add duplicated package
        run: aqua g -i suzuki-shunsuke/tfcmt
        working-directory: tests/main
        env:
          GITHUB_TOKEN: ${{steps.token.outputs.token}}
      - run: git diff aqua.yaml
        working-directory: tests/main

      - name: "Test generate-registry"
        run: aqua gr suzuki-shunsuke/mkghtag
        env:
          GITHUB_TOKEN: ${{steps.token.outputs.token}}
      - name: Test generate-registry (specify version)
        run: aqua gr suzuki-shunsuke/tfcmt@v3.2.4
        env:
          GITHUB_TOKEN: ${{steps.token.outputs.token}}

      - name: test aqua cp
        run: aqua cp actionlint
        env:
          GITHUB_TOKEN: ${{steps.token.outputs.token}}
      - name: test aqua cp
        run: dist/actionlint -version
      - name: test aqua cp
        run: aqua cp
        env:
          GITHUB_TOKEN: ${{steps.token.outputs.token}}
      - name: test aqua cp -a
        run: aqua cp -a
        env:
          GITHUB_TOKEN: ${{steps.token.outputs.token}}

      - name: test tags
        run: aqua i
        working-directory: tests/tag
        env:
          GITHUB_TOKEN: ${{steps.token.outputs.token}}
      - name: test tags
        run: aqua i -t test
        working-directory: tests/tag
        env:
          GITHUB_TOKEN: ${{steps.token.outputs.token}}
      - name: test tags
        run: aqua i -t foo,bar
        working-directory: tests/tag
        env:
          GITHUB_TOKEN: ${{steps.token.outputs.token}}
      - name: test tags
        run: aqua i --exclude-tags test
        working-directory: tests/tag
        env:
          GITHUB_TOKEN: ${{steps.token.outputs.token}}
      - name: test tags
        run: aqua i --exclude-tags test -t foo
        working-directory: tests/tag
        env:
          GITHUB_TOKEN: ${{steps.token.outputs.token}}

      - name: test tags
        run: aqua cp
        working-directory: tests/tag
        env:
          GITHUB_TOKEN: ${{steps.token.outputs.token}}
      - name: test tags
        run: aqua cp -t test
        working-directory: tests/tag
        env:
          GITHUB_TOKEN: ${{steps.token.outputs.token}}
      - name: test tags
        run: aqua cp -t foo,bar
        working-directory: tests/tag
        env:
          GITHUB_TOKEN: ${{steps.token.outputs.token}}
      - name: test tags
        run: aqua cp --exclude-tags test
        working-directory: tests/tag
        env:
          GITHUB_TOKEN: ${{steps.token.outputs.token}}
      - name: test tags
        run: aqua cp --exclude-tags test -t foo
        working-directory: tests/tag
        env:
          GITHUB_TOKEN: ${{steps.token.outputs.token}}

      - name: update only registrires
        run: |
          aqua update -r
          git diff .
          git checkout -- .
        working-directory: tests/update

      - name: update only packages
        run: |
          aqua up -p
          git diff .
          git checkout -- .
        working-directory: tests/update
        env:
          GITHUB_TOKEN: ${{steps.token.outputs.token}}

      - name: update all registries and packages
        run: |
          aqua update
          git diff .
          git checkout -- .
        working-directory: tests/update
        env:
          GITHUB_TOKEN: ${{steps.token.outputs.token}}

      - name: update only specific command
        run: |
          aqua update tfcmt ci-info
          git diff .
          git checkout -- .
        working-directory: tests/update
        env:
          GITHUB_TOKEN: ${{steps.token.outputs.token}}

      - run: aqua update-checksum -a
        env:
          GITHUB_TOKEN: ${{steps.token.outputs.token}}

      - name: Test rm
        run: aqua rm x-motemen/ghq bats-core/bats-core

      - name: Test rm --all
        run: aqua rm -a

      # Test if global configuration files are read in `aqua list` and `aqua g`
      - run: aqua list
        working-directory: /tmp

      - name: Test update-aqua
        run: aqua update-aqua
        env:
          GITHUB_TOKEN: ${{steps.token.outputs.token}}
